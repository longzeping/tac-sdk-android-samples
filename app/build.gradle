import com.google.common.base.Charsets
import com.google.common.io.Files
import com.google.gson.JsonElement
import com.google.gson.JsonObject
import com.google.gson.JsonParser
import com.google.gson.JsonPrimitive

apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        applicationId "com.tencent.tac.sample"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters 'armeabi','x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    signingConfigs {
        release {
            storeFile file("../key/wangdas.jks")
            storePassword "123456"
            keyAlias "wangdas"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'demo'

    productFlavors {
        adpt {
            dimension 'demo'
        }
        spec {
            dimension 'demo'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

android.applicationVariants.all { variant ->
    def mergedFlavor = variant.mergedFlavor
    switch (variant.flavorName) {
        case 'adpt':
            File conf = project.file('tac_service_configurations.json')
            JsonElement root = new JsonParser().parse(Files.newReader(conf, Charsets.UTF_8))
            JsonObject rootObject = root.getAsJsonObject()
            JsonObject applicationInfo = rootObject.getAsJsonObject("application")
            JsonPrimitive packageId = applicationInfo.getAsJsonPrimitive("packageId")
            mergedFlavor.setApplicationId(packageId.getAsString())
            break
        case 'spec':
            mergedFlavor.setApplicationId('com.tencent.tac.sample')
            break
    }
}

def TAC_VERSION = '1.2.0'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.tencent.tac:tac-all:1.2.0"
    //    implementation "com.tencent.tac:tac-core:1.2.0"
    //    implementation "com.tencent.tac:tac-messaging:1.2.0"
    //    implementation "com.tencent.tac:tac-messaging-lite:1.2.0"
    //    implementation "com.tencent.tac:tac-social:1.2.0"
    //    implementation "com.tencent.tac:tac-payment:1.2.0"
    //    implementation "com.tencent.tac:tac-storage:1.2.0"
    //    implementation "com.tencent.tac:tac-crash:1.2.0"
    //    implementation "com.tencent.tac:tac-authorization:1.2.0"
    implementation 'com.android.support:appcompat-v7:26.+'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.1'
}
apply plugin: "com.tencent.tac.services"


